/*
  Task: Given the root of a binary tree, return the inorder traversal of its nodes' values.
  
  Example 1:
  Input: root = [1,null,2,3]
  Output: [1,3,2]

  Example 2:
  Input: root = []
  Output: []
  
  Example 3:
  Input: root = [1]
  Output: [1]

  Example 4:
  Input: root = [1,2]
  Output: [2,1]
*/

// With Recursion
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        getVal(root, res);

        return res;
    }

    public void getVal(TreeNode root, List<Integer> list) {
        if (root != null) {
            getVal(root.left, list);
            list.add(root.val);
            getVal(root.right, list);
        }
    }
}
